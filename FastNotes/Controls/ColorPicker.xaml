<Window xmlns:FastNotes="clr-namespace:Controls" x:Class="Controls.ColorPicker"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Controls"
        xmlns:m="clr-namespace:Controls.Models"
        mc:Ignorable="d"
        Title="ColorPicker"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        AllowsTransparency="True"
        MinHeight="{Binding WindowMinHeight}"
        MinWidth="200"
        ShowInTaskbar="False"
        Icon="Images/Icons/icon.png" Width="230" SizeToContent="Height" Height="Auto">
    <Window.Resources>
        <ResourceDictionary>
            <m:SelectedColorInfo x:Key="SelectedColorInfo"  x:Name="SelectedColorInfoName"/>
            <Style TargetType="{x:Type local:ColorPicker}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <!--Outer border with drop shadow-->
                            <Border Padding="{Binding OuterMarginSizeThickness, FallbackValue=10}">
                                <!--Main window outline-->
                                <Grid>
                                    <!--Window border and drop shadow-->
                                    <Border CornerRadius="{Binding WindowCornerRadius, FallbackValue=0}"  BorderBrush="Black" BorderThickness="2">
                                        <Border.Effect>
                                            <DropShadowEffect Direction="0" ShadowDepth="0" Opacity="0.6" BlurRadius="15" />
                                        </Border.Effect>
                                    </Border>

                                    <Border x:Name="Container" 
                                        Background="{DynamicResource MainColorDarkBrush}"
                                        CornerRadius="0">
                                    </Border>



                                    <!--The main window content-->
                                    <Grid>

                                        <!--Opacity mask for corners in a grid-->
                                        <Grid.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=Container}"/>
                                        </Grid.OpacityMask>

                                        <Grid.RowDefinitions>
                                            <!--Title bar-->
                                            <RowDefinition Height="{Binding TitleHeightGridLength}"/>
                                            <!--Window Content-->
                                            <RowDefinition  Height="*" />
                                        </Grid.RowDefinitions>




                                        <!--Title bar-->
                                        <Grid Background="{DynamicResource MainColorDarkBrush}" Grid.Row="0" Panel.ZIndex="1">
                                            <Grid.ColumnDefinitions>
                                                <!--Icon-->
                                                <ColumnDefinition Width="Auto"/>
                                                <!--Title-->
                                                <ColumnDefinition Width="*"/>
                                                <!--Buttons-->
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>


                                            <!--Icon-->
                                            <Button Padding="7" Style="{DynamicResource TopBarIconButtonStyle}" Command="{Binding MenuCommand}" Grid.Column="0">
                                                <ContentPresenter Content="{DynamicResource logoIcon}" />
                                                <!--<Image Source="Images/Icons/icon.png"/>-->
                                            </Button>
                                            <!--Title-->
                                            <TextBlock Style="{DynamicResource TitleTextBlock}" FontSize="18" FontFamily="/Controls;component/Fonts/Quesha/#Quesha" Grid.Column="1" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title, FallbackValue=FastNotes}"/>
                                            <!--Minmize, Maximize, Close Buttons-->
                                            <StackPanel Grid.Column="2" Orientation="Horizontal">
                                                <Button Content="{DynamicResource MinimizeIcon}"  Style="{DynamicResource WindowControlButton}" Command="{Binding MinimizeCommand}" />
                                                <Button Content="{DynamicResource CloseIcon}"  Style="{DynamicResource WindowControlButton}" Command="{Binding CloseCommand}" />
                                            </StackPanel>
                                        </Grid>
                                        <!--Page content-->
                                        <Border Grid.Row="1" Padding="0"  Background="White" CornerRadius="0" BorderThickness="0" BorderBrush="{DynamicResource MainColorDarkBrush}">
                                            <ContentPresenter Content="{TemplateBinding Content}"/>
                                        </Border>

                                    </Grid>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="GlobalResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome 
            ResizeBorderThickness="{Binding ResizeBorderThickness}"
            CaptionHeight="{Binding TitleHeight}"
            GlassFrameThickness="0"
            CornerRadius="0"/>
    </WindowChrome.WindowChrome>
    <Grid DataContext="{StaticResource SelectedColorInfo}">
        <Grid.Resources>
            <m:SelectedColorInfo x:Key="SelectedColorInfo" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- Saturation - Value Viewer -->
        <Canvas ClipToBounds="True" PreviewMouseDown="SVViewer_PreviewMouseDown" PreviewMouseUp="SVViewer_PreviewMouseUp" MouseLeave="SVViewer_MouseLeave" PreviewMouseMove="SVDot_MouseMove" x:Name="SVViewer" Grid.Row="0" Height="126" Width="Auto" HorizontalAlignment="Stretch" Background="Blue" >
            <Border x:Name="SVDot" Width="16" Height="16" Canvas.Left="27" Canvas.Top="120">
                <Border.Background>
                    <ImageBrush ImageSource="Images/Icons/PickerDot.png"/>
                </Border.Background>
            </Border>
        </Canvas>



        <!-- Slider -->
        <Grid Grid.Row="1" Margin="15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Canvas Grid.Column="0" Width="32" Height="32">
                <!-- Border -->
                <Ellipse Width="32" Height="32" Fill="#FFE0E0E0" />
                <!-- Preview current selected color -->
                <Ellipse Margin="1 1 0 0" x:Name="CurrentColorEllipse" Fill="White" Height="30" Width="30" />
            </Canvas>
            <Border Margin="20 0 10 0" x:Name="HuePreviewer" Background="Red" Height="10" Grid.Column="1" />

            <Slider Margin="10 0 0 0" Minimum="0" ValueChanged="HueSlider_ValueChanged" Maximum="360" Grid.Column="1" VerticalAlignment="Center" x:Name="HueSlider" Background="Red" IsMoveToPointEnabled="True" Foreground="Green"  Style="{StaticResource HueSlider}"/>
        </Grid>


        <Grid Grid.Row="2" Margin="15 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Input Color -->
            <Grid x:Name="HexColorPanel" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <FastNotes:SelectableTextBox GotKeyboardFocus="HexTextBlock_GotKeyboardFocus" TextChanged="HexTextBlock_TextChanged" x:Name="HexTextBlock" Grid.Row="0" Grid.Column="0" Text="#00000" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" Width="Auto" VerticalAlignment="Center" Height="25"/>

                <TextBlock HorizontalAlignment="Center" Grid.Row="1" Grid.Column="0" Foreground="#FF787878" Text="HEX" />

            </Grid>
            <Grid Visibility="Collapsed" x:Name="RGBColorPanel" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <FastNotes:SelectableTextBox x:Name="RComponent" GotKeyboardFocus="RGBComponent_GotKeyboardFocus" PreviewMouseWheel="RGBComponent_MouseWheel" TextChanged="RGBComponents_TextChanged" Grid.Row="0" Height="25" Grid.Column="0" Text="255" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"  HorizontalAlignment="Center" Width="30" VerticalAlignment="Center"/>
                <FastNotes:SelectableTextBox x:Name="GComponent" GotKeyboardFocus="RGBComponent_GotKeyboardFocus" PreviewMouseWheel="RGBComponent_MouseWheel" TextChanged="RGBComponents_TextChanged"  Grid.Row="0" Height="25" Grid.Column="1"  Text="255"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" Width="30" VerticalAlignment="Center"/>
                <FastNotes:SelectableTextBox x:Name="BComponent" GotKeyboardFocus="RGBComponent_GotKeyboardFocus" PreviewMouseWheel="RGBComponent_MouseWheel" TextChanged="RGBComponents_TextChanged"  Grid.Row="0" Height="25" Grid.Column="2" Text="255"   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" Width="30" VerticalAlignment="Center"/>

                <TextBlock HorizontalAlignment="Center" Grid.Row="1" Grid.Column="0" Text="R" Foreground="#FF787878"  />
                <TextBlock HorizontalAlignment="Center" Grid.Row="1" Grid.Column="1" Text="G" Foreground="#FF787878"  />
                <TextBlock HorizontalAlignment="Center" Grid.Row="1" Grid.Column="2" Text="B" Foreground="#FF787878"  />

            </Grid>
            <!-- End Input Color -->

            <!-- Swap button -->
            <Border Grid.Column="1" Margin="15 0 0 0">
                <FastNotes:FNToggleButton VerticalAlignment="Top" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" Height="25" Click="SwapInputMode" Style="{DynamicResource ToggleFontStyleButton}">
                    <FastNotes:XamlIcon  FillColor="{Binding RelativeSource= {RelativeSource FindAncestor, 
                            AncestorType={x:Type local:FNToggleButton}, AncestorLevel=1},Path=Foreground, FallbackValue=Black}"
                                        DesiredHeight="16" DesiredWidth="16" Style="{StaticResource SwapIcon}" />
                </FastNotes:FNToggleButton>
            </Border>

        </Grid>




        <StackPanel Margin="15" Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center">
            <FastNotes:IconButtonAnimated Content="Select" Style="{StaticResource CommonButton}" IsDefault="True"  Click="OnSelectClick"/>
            <FastNotes:IconButtonAnimated Content="Cancel" Style="{StaticResource CommonButton}" IsCancel="True" Click="OnCancelClick" />
        </StackPanel>


    </Grid>


</Window>
