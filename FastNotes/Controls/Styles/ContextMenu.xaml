<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Controls.Styles"
                    xmlns:global="clr-namespace:Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="FNMenu" TargetType="ContextMenu">
        <Setter Property="FontSize" Value="60" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="StaysOpen" Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="MaxHeight" Value="800" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border BorderThickness="0">
                        <ScrollViewer Style="{StaticResource FavsScrollViewer}" x:Name="Border"
                                      VerticalScrollBarVisibility="Auto"
                                  Background="{StaticResource MainColorDarkBrush}">
                            <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





    <Style x:Key="CommonMenuItem" TargetType="{x:Type global:HighlightableMenuItemBase}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" FontSize="17" FontFamily="{StaticResource Quesha}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Background" Value="{StaticResource MainColorDarkBrush}" />
        <Setter Property="Foreground" Value="{StaticResource CommonTextBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource MainColorVeryLightBrush}" />
        <Setter Property="NormalColor" Value="{StaticResource MainColorDark}" />
        <Setter Property="HoverColor" Value="{StaticResource MainColorLight}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="15 10 20 10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type global:HighlightableMenuItemBase}">
                    <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid VerticalAlignment="Center" FocusVisualStyle="{x:Null}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*" FocusVisualStyle="{x:Null}"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                    x:Name="Icon" 
                                    Content="{TemplateBinding Icon}" 
                                    ContentSource="Icon" 
                                    HorizontalAlignment="Center" 
                                    Height="16" 
                                    Margin="15 0 0 0" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="Center" 
                                    Width="16"/>
                            <Path 
                                    x:Name="GlyphPanel" 
                                    Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                                    Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" 
                                    Margin="15 0 0 0" Visibility="Collapsed" 
                                    VerticalAlignment="Center"/>
                            <ContentPresenter
                                    ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                    Content="{TemplateBinding Header}" Grid.Column="1" 
                                    ContentStringFormat="{TemplateBinding HeaderStringFormat}" 
                                    ContentSource="Header" Margin="{TemplateBinding Padding}"
                                    RecognizesAccessKey="True" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Popup 
                                    x:Name="PART_Popup" 
                                    AllowsTransparency="True" 
                                    Focusable="False" 
                                    StaysOpen="True"
                                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                                    Placement="Right" MaxHeight="600">
                                <Border>
                                    <Border x:Name="SubMenuBorder" Margin="4 0" BorderThickness="0 0" BorderBrush="{StaticResource MainColorDarkBrushOp50}">
                                        <ScrollViewer
                                            x:Name="SubMenuScrollViewer" 
                                             Background="{StaticResource MainColorDarkBrush}"  Style="{StaticResource FavsScrollViewer}">
                                            <ItemsPresenter Margin="0"
                                                    x:Name="ItemsPresenter" 
                                                    KeyboardNavigation.DirectionalNavigation="Cycle" 
                                                    Grid.IsSharedSizeScope="True" 
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                    KeyboardNavigation.TabNavigation="Cycle"/>
                                        </ScrollViewer>
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="White"/>
                            <Setter Property="Fill" TargetName="GlyphPanel" Value="White"/>
                        </Trigger>
                        <!--<Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                            </Trigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource MainColorLight}" Duration="0:0:0.3" FillBehavior="HoldEnd" AutoReverse="False"  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" />
                                        <ThicknessAnimation To="5 0 0 0" Duration="0:0:0.1" Storyboard.TargetProperty="BorderThickness"  />
                                        <ThicknessAnimation To="15 10" Duration="0:0:0.1" Storyboard.TargetProperty="Padding" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource MainColorDark}" Duration="0:0:0.5" FillBehavior="Stop"  IsAdditive="False" IsCumulative="True"  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" />
                                        <ThicknessAnimation To="0" Duration="0:0:0.5" Storyboard.TargetProperty="BorderThickness"  />
                                        <ThicknessAnimation To="15 10 20 10" Duration="0:0:0.5" Storyboard.TargetProperty="Padding" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="CaptureHover" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>

                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource MainColorLight}" Duration="0:0:0.3" AutoReverse="False" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" />
                                        <ThicknessAnimation To="5 0 0 0" Duration="0:0:0.1" Storyboard.TargetProperty="BorderThickness"  />
                                        <ThicknessAnimation To="15 10" Duration="0:0:0.1" Storyboard.TargetProperty="Padding" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource MainColorDark}" Duration="0:0:0.000001" FillBehavior="Stop"  IsAdditive="False" IsCumulative="True"  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" />
                                        <ThicknessAnimation To="0" Duration="0:0:0.000001"  FillBehavior="Stop" Storyboard.TargetProperty="BorderThickness"  />
                                        <ThicknessAnimation To="15 10 20 10" Duration="0:0:0.000001" FillBehavior="Stop"  Storyboard.TargetProperty="Padding" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FNSeparator" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Height="10" Background="{StaticResource MainColorDarkBrush}">
                        <Border 
                        BorderThickness="15 0"
                        BorderBrush="{StaticResource MainColorDarkBrush}"
                        Background="White" 
                        Height="1" 
                        Opacity=".1"
                        SnapsToDevicePixels="true"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>