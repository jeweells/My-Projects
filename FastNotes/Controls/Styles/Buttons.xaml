<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Controls.Styles"
                    xmlns:global="clr-namespace:Controls">

    <ResourceDictionary.MergedDictionaries>
        <!-- Order is important -->
        <ResourceDictionary Source="Fonts.xaml" />
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Texts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Style of the icon on the top bar -->
    <Style TargetType="{x:Type Button}" x:Key="HoverlessButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!-- Style of the minimize, maximize, close buttons -->
    <Style TargetType="{x:Type Button}" x:Key="TopBarIconButtonStyle" BasedOn="{StaticResource HoverlessButtonStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton">
        <Setter Property="Padding" Value="7" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource MainColorDarkBrush}"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  To="{StaticResource MainColorLight}" Duration="0:0:0.3" AutoReverse="False" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <EventTrigger RoutedEvent="Button.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  To="{StaticResource MainColorDark}" Duration="0:0:0.5" AutoReverse="False" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
        
        
        
    </Style>



    <Style x:Key="NormalButton" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource MainColorDarkBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource NormalButtonForegroundBrush}"/>
        <Setter Property="Padding" Value="15 7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <EventTrigger RoutedEvent="Button.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  From="{StaticResource MainColorDark}" To="{StaticResource MainColorLight}" FillBehavior="Stop" AutoReverse="False" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <EventTrigger RoutedEvent="Button.MouseLeave">
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation 
                  Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                  From="{StaticResource MainColorLight}" To="{StaticResource MainColorDark}" Duration="0:0:0.5" AutoReverse="False" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
            </EventTrigger>

        </Style.Triggers>
        
    </Style>


    <!-- Note Button-->
    <Style TargetType="{x:Type Button}" x:Key="NoteButton">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Padding" Value="7" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>



    <!-- ToggleFontStyleButton -->
    <Style TargetType="{x:Type global:FNToggleButton}" x:Key="ToggleFontStyleButton" BasedOn="{StaticResource NoteButton}">
        <Setter Property="NormalColor" Value="White" />
        <Setter Property="HoverColor" Value="{DynamicResource MainColorVeryLight}" />
        <Setter Property="PressedColor" Value="{DynamicResource MainColorDark}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="NormalForeColor" Value="Black" />
        <Setter Property="HoverForeColor" Value="White" />
        <Setter Property="PressedForeColor" Value="White" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
    </Style>

    <Style x:Key="CommonButton" TargetType="{x:Type global:IconButtonAnimated}">
        <Setter Property="Height" Value="36"/>
        <Setter Property="Padding" Value="7" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="NormalColor" Value="{StaticResource MainColorDark}"/>
        <Setter Property="HoverColor" Value="{StaticResource MainColorLight}"/>
        <Setter Property="PressedColor" Value="{StaticResource MainColorLight}"/>
        <Setter Property="NormalForeColor" Value="White"/>
        <Setter Property="HoverForeColor" Value="White"/>
        <Setter Property="PressedForeColor" Value="White"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Padding" Value="18 5" />
        <Setter Property="Margin" Value="5 0" />
    </Style>

    <Style x:Key="HueSliderRepeatButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="HueSliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Ellipse Height="20" Width="20" Fill="{TemplateBinding Background}"></Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HueSliderTemplate"  TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Track Grid.Row="1" x:Name="PART_Track"   >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Height="{TemplateBinding Height}" Style="{StaticResource HueSliderRepeatButton}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Background="{TemplateBinding Foreground}" Style="{StaticResource HueSliderThumb}"  />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Height="{TemplateBinding Height}" Style="{StaticResource HueSliderRepeatButton}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>


    <Style x:Key="HueSlider" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="Template" Value="{StaticResource HueSliderTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>