<Window x:Class="FastNotes.NoteWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FastNotes"
        xmlns:cv="clr-namespace:FastNotes.Converters"
        xmlns:c="clr-namespace:Controls;assembly=Controls"
        x:Name="Note"
        mc:Ignorable="d"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        AllowsTransparency="True"
        MinHeight="{Binding WindowMinHeight}"
        MinWidth="{Binding WindowMinWidth}"
        Title="Note"
        Icon="Images/Icons/icon.png"
        Height="240" Width="225" ShowInTaskbar="False">
    <Window.Resources>
        <ResourceDictionary>
        <cv:OpacityConverter x:Key="OpacityConverter" />
        <local:NoteWindowBaseModel x:Key="DataContainer" />
        <Style TargetType="{x:Type local:NoteWindow}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:NoteWindow}">
                        <!-- Outer border with drop shadow -->

                        <Border x:Name="DataContainerControl" Padding="{Binding OuterMarginSizeThickness, FallbackValue=10}" DataContext="{StaticResource DataContainer}">
                            
                           
                            <!-- Main window outline -->
                            
                            <Grid>
                                <!-- Window border and drop shadow-->
                                <Border CornerRadius="{Binding WindowCornerRadius, FallbackValue=0}"  BorderBrush="Black" BorderThickness="2">
                                    <Border.Effect>
                                        <DropShadowEffect Direction="0" ShadowDepth="0" Opacity="0.6" BlurRadius="15" />
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="Container" 
                                        Background="{StaticResource MainColorDarkBrush}"
                                        CornerRadius="{Binding WindowCornerRadius, FallbackValue=0}">
                                </Border>
                                
                                <!-- The main window content -->
                                <Grid>
                                    <!-- Opacity mask for corners in a grid -->
                                    <Grid.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=Container}"/>
                                    </Grid.OpacityMask>
                                    <Grid.RowDefinitions>
                                        <!-- Title bar -->
                                        <RowDefinition Height="36"/>
                                        <!-- Window Content -->
                                        <RowDefinition  Height="*" />
                                    </Grid.RowDefinitions>
                                    <!-- Title bar-->
                                    <Grid x:Name="TopBar" Grid.Row="0" Panel.ZIndex="1">
                                        <Grid.Background>
                                            <SolidColorBrush Color="{Binding DarkMainColor, FallbackValue=DarkKhaki}"/>
                                        </Grid.Background>
                                        <Grid.ColumnDefinitions>
                                            <!-- Icon -->
                                            <ColumnDefinition Width="Auto"/>
                                            <!-- Title -->
                                            <ColumnDefinition Width="*"/>
                                            <!-- Buttons -->
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <!-- Add Note Icon -->
                                        <c:IconButtonAnimated
                                            NormalColor="{Binding DarkMainColor, FallbackValue=DarkRed}"
                                            HoverColor="{Binding MainColor, FallbackValue=DarkRed}"
                                            PressedColor="{Binding MainColor, FallbackValue=DarkRed}"
                                            Foreground="{Binding DarkTextBrush, FallbackValue=White, Converter={StaticResource OpacityConverter}, ConverterParameter=0.1}"
                                            NormalForeColor="{Binding DarkTextColor, FallbackValue=White, Converter={StaticResource OpacityConverter}, ConverterParameter=0.1}"
                                            HoverForeColor="{Binding TextColor, FallbackValue=White}"
                                            PressedForeColor="{Binding TextColor, FallbackValue=White}"
                                            
                                            Margin="0" Padding="4 0 0 0" Grid.Column="0" Click="OnCreateNoteBtnClick">
                                            <c:XamlIcon FillColor="{Binding 
                                                RelativeSource={RelativeSource FindAncestor, 
                                                AncestorType={x:Type c:IconButtonAnimated}, AncestorLevel=1}, Path=Foreground}" 
                                                            Margin="-4 0 0 0" Style="{StaticResource AddIconStyle}"/>
                                            <!--<Image Source="Images/Icons/icon.png"/>-->
                                        </c:IconButtonAnimated>

                                        <!-- Title-->
                                        <!--<TextBlock Style="{StaticResource TitleTextBlock}" Grid.Column="1" FontSize="16" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title, FallbackValue=FastNotes}"/>-->
                                        <!-- Minmize, Maximize, Close Buttons -->
                                        <StackPanel Grid.Column="2" Orientation="Horizontal">
                                            <!-- Pin Button-->

                                            <c:IconButtonAnimated
                                                NormalColor="{Binding DarkMainColor, FallbackValue=DarkRed}"
                                                HoverColor="{Binding MainColor, FallbackValue=DarkRed}"
                                                PressedColor="{Binding MainColor, FallbackValue=DarkRed}"
                                                Foreground="{Binding DarkTextBrush, FallbackValue=White}"
                                                NormalForeColor="{Binding DarkTextColor, FallbackValue=White}"
                                                HoverForeColor="{Binding TextColor, FallbackValue=White}"
                                                PressedForeColor="{Binding TextColor, FallbackValue=White}"
                                                Click="OnPinBtnClick">
                                                <Grid Margin="-2 0 0 0" Width="14" Height="14">
                                                    <c:XamlIcon FillColor="{Binding 
                                                RelativeSource={RelativeSource FindAncestor, 
                                                AncestorType={x:Type c:IconButtonAnimated}, AncestorLevel=1}, Path=Foreground}" Visibility="{Binding PinVisibility, FallbackValue=Visible}" Style="{StaticResource PinIconStyle}"/>
                                                    <c:XamlIcon FillColor="{Binding 
                                                RelativeSource={RelativeSource FindAncestor, 
                                                AncestorType={x:Type c:IconButtonAnimated}, AncestorLevel=1}, Path=Foreground}"  Visibility="{Binding UnpinVisibility, FallbackValue=Collapsed}"  Style="{StaticResource UnpinIconStyle}"/>
                                                </Grid>
                                            </c:IconButtonAnimated>
                                            <!-- Color Picker Button-->
                                            <c:IconButtonAnimated
                                                NormalColor="{Binding DarkMainColor, FallbackValue=DarkRed}"
                                                HoverColor="{Binding MainColor, FallbackValue=DarkRed}"
                                                PressedColor="{Binding MainColor, FallbackValue=DarkRed}"
                                                Foreground="{Binding DarkTextBrush, FallbackValue=White}"
                                                NormalForeColor="{Binding DarkTextColor, FallbackValue=White}"
                                                HoverForeColor="{Binding TextColor, FallbackValue=White}"
                                                PressedForeColor="{Binding TextColor, FallbackValue=White}"
                                                Click="OnColorPickerBtnClick">
                                                <c:XamlIcon  FillColor="{Binding 
                                                RelativeSource={RelativeSource FindAncestor, 
                                                AncestorType={x:Type c:IconButtonAnimated}, AncestorLevel=1}, Path=Foreground}"  Style="{StaticResource ColorPickerIconStyle}"/>
                                            </c:IconButtonAnimated>
                                            <!-- Font Button -->
                                            <c:IconButtonAnimated
                                                NormalColor="{Binding DarkMainColor, FallbackValue=DarkRed}"
                                                HoverColor="{Binding MainColor, FallbackValue=DarkRed}"
                                                PressedColor="{Binding MainColor, FallbackValue=DarkRed}"
                                                Foreground="{Binding DarkTextBrush, FallbackValue=White}"
                                                NormalForeColor="{Binding DarkTextColor, FallbackValue=White}"
                                                HoverForeColor="{Binding TextColor, FallbackValue=White}"
                                                PressedForeColor="{Binding TextColor, FallbackValue=White}" Padding="-1 0 0 0" 
                                                Click="OnFontBtnClick">
                                                <c:XamlIcon Margin="0 2 0 0"  FillColor="{Binding 
                                                RelativeSource={RelativeSource FindAncestor, 
                                                AncestorType={x:Type c:IconButtonAnimated}, AncestorLevel=1}, Path=Foreground}"  Style="{StaticResource FontIconStyle}"/>
                                            </c:IconButtonAnimated>
                                            <!-- DIscard Button-->
                                            <c:IconButtonAnimated
                                                NormalColor="{Binding DarkMainColor, FallbackValue=DarkRed}"
                                                HoverColor="{Binding MainColor, FallbackValue=DarkRed}"
                                                PressedColor="{Binding MainColor, FallbackValue=DarkRed}"
                                                Foreground="{Binding DarkTextBrush, FallbackValue=White}"
                                                NormalForeColor="{Binding DarkTextColor, FallbackValue=White}"
                                                HoverForeColor="{Binding TextColor, FallbackValue=White}"
                                                PressedForeColor="{Binding TextColor, FallbackValue=White}"
                                                Margin="0"
                                                Click="OnDiscardBtnClick">
                                                <c:XamlIcon FillColor="{Binding 
                                                RelativeSource={RelativeSource FindAncestor, 
                                                AncestorType={x:Type c:IconButtonAnimated}, AncestorLevel=1}, Path=Foreground}" Style="{StaticResource DiscardIconStyle}"/>
                                            </c:IconButtonAnimated>
                                        </StackPanel>
                                    </Grid>
                                    <!-- Page content -->
                                    <Border Name="Border" Grid.Row="1" Padding="3 6 3 6" Margin="0" BorderThickness="0">
                                        <Border.Background>
                                            <SolidColorBrush Color="{Binding MainColor, FallbackValue=DarkKhaki}" />
                                        </Border.Background>
                                        <ContentPresenter Content="{TemplateBinding Content}"/>
                                    </Border>

                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        </ResourceDictionary>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome 
            ResizeBorderThickness="{Binding ResizeBorderThickness}"
            CaptionHeight="{Binding TitleHeight, FallbackValue={StaticResource TitleBarDefaultHeight}}"
            GlassFrameThickness="0"
            CornerRadius="0"
            />
    </WindowChrome.WindowChrome>
    <Grid Margin="0" >
        <local:FNRichTextBox 
            DataContext="{StaticResource DataContainer}"
            CaretBrush="{Binding TextBrush, FallbackValue=Black}"
            SelectionBrush="{Binding TextBrush, FallbackValue=DarkKhaki}"
            Style="{StaticResource NoteTextContainerStyle}" 
            Margin="0" 
            VerticalScrollBarVisibility="Auto"
            HorizontalScrollBarVisibility="Disabled"
            Padding="0 5" 
            Foreground="{Binding TextBrush, FallbackValue=Black}" 
            Background="{Binding MainBrush}" 
            x:Name="textBox"
            BorderBrush="Transparent"
            FontSize="14">
            <local:FNRichTextBox.ContextMenu>
                <ContextMenu  Style="{StaticResource FNMenu}">

                    <c:HighlightableMenuItem Icon="{StaticResource SelectAllIcon}" Header="Select All" Click="SelectAll_MenuItemClick"/>
                    <c:HighlightableMenuItem Icon="{StaticResource ZoomInIcon}" Header="Zoom In" Click="ZoomIn_MenuItemClick"/>
                    <c:HighlightableMenuItem Icon="{StaticResource ZoomOutIcon}" Header="Zoom Out" Click="ZoomOut_MenuItemClick"/>
                    <c:HighlightableMenuItem Icon="{StaticResource LoopIcon}" Header="Reset Zoom" Click="ResetZoom_MenuItemClick"/>
                    <Separator Style="{StaticResource FNSeparator}"/>
                    <c:HighlightableMenuItem Icon="{StaticResource CutIcon}" Header="Cut" Click="Cut_MenuItemClick"/>
                    <c:HighlightableMenuItem Icon="{StaticResource CopyIcon}" Header="Copy" Click="Copy_MenuItemClick"/>
                    <c:HighlightableMenuItem Icon="{StaticResource PasteIcon}" Header="Paste" Click="Paste_MenuItemClick"/>
                    <Separator Style="{StaticResource FNSeparator}"/>
                    <c:HighlightableMenuItem Icon="{StaticResource AlignLeftIcon}" Header="Align Left" Click="AlignLeft_MenuItemClick"/>
                    <c:HighlightableMenuItem Icon="{StaticResource AlignCenterIcon}" Header="Align Center" Click="AlignCenter_MenuItemClick"/>
                    <c:HighlightableMenuItem Icon="{StaticResource AlignRightIcon}" Header="Align Right" Click="AlignRight_MenuItemClick"/>
                    <c:HighlightableMenuItem Icon="{StaticResource JustifyIcon}" Header="Justify" Click="Justify_MenuItemClick"/>

                </ContextMenu>
            </local:FNRichTextBox.ContextMenu>
        </local:FNRichTextBox>
    </Grid>
</Window>
